module.exports = Object.assign(extend, {
    options: ['--directory', '--subdomain', '--passcode', '--username'],
    flags: ['--wsdl', '--templates', '--force'],
    shortcuts: ['-d', '-s', '-p', '-u'],
    help: `
# SYNOPSIS

    *cds extend* <app-url>

    Create an extension project from an app URL
    You get the URL from the SaaS application you want to extend.


# OPTIONS

    *-d* | *--directory* <project-extension-directory>
    
        Specify the target directory of your extension project.

    *-s* | *--subdomain* <tenant-subdomain>
    
        Specify the subdomain of the SaaS application you want to extend.
    *-p* | *--passcode* <passcode>
    
        The tenant-specific passcode for authentication.

    *-u* | *--username* <name> 

        Deprecated. Use passcode parameter instead.
    
    *--force*

        Overwrite existing content. Make sure you are using a version control system (like git) to avoid data loss.

    *--templates*
    
        Download templates provided by the SaaS application you want to extend.
        
`})


async function extend ([url], options = {}) {
    const client = require('@sap/cds-sidecar-client')

    if (options.force) {
        if (! await client.question.askBooleanQuestion('Using option --force will overwrite extisting files. Continue (yN)? ', false, false)) {
            console.log('Extend cancelled')
            return
        }
    }

    Object.assign(options, { url })
    client.extend(options)
}


/* eslint no-console: off */
